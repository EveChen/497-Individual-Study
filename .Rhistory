install.packages("readr")
install.packages("data.table")
library(RandomForest)
install.packages("RandomForest")
install.packages("randomForest")
library(randomForest)
library(readr)
library(data.table)
shinyUI(bootstrapPage(
selectInput(inputId = "n_breaks",
label = "Number of bins in
histogram (approximate):",
choices = c(10, 20, 35, 50),
selected = 20),
plotOutput(outputId =
"main_plot", height = "300px")
))
install.packages("shiny")
library(shiny)
shinyUI(bootstrapPage(
selectInput(inputId = "n_breaks",
label = "Number of bins in
histogram (approximate):",
choices = c(10, 20, 35, 50),
selected = 20),
plotOutput(outputId =
"main_plot", height = "300px")
))
shinyUI(bootstrapPage(
selectInput(inputId = "n_breaks",
label = "Number of bins in histogram (approximate):",
choices = c(10, 20, 35, 50),
selected = 20),
checkboxInput(inputId = "individual_obs",
label = strong("Show individual observations"),
value = FALSE),
checkboxInput(inputId = "density",
label = strong("Show density estimate"),
value = FALSE),
plotOutput(outputId = "main_plot", height = "300px"),
# Display this only if the density is shown
conditionalPanel(condition = "input.density == true",
sliderInput(inputId = "bw_adjust",
label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
)
))
runExample("01_hello")
runApp('C:/Users/Eve/Dropbox/UCLA專區/課程/418 Tools of Data Science/HW2 - Shiny作品/HW2')
runApp('C:/Users/Eve/Dropbox/UCLA專區/課程/418 Tools of Data Science/HW2 - Shiny作品/HW2')
runApp('C:/Users/Eve/Downloads/shiny-quickstart-1/downloads/code/01-template.R')
runApp('C:/Users/Eve/Downloads/shiny-quickstart-1/downloads/code/01-template.R')
shiny::runApp('C:/ShinyApp')
runApp('C:/ShinyApp')
runApp('C:/ShinyApp')
runApp('C:/ShinyApp')
uninstall.packages("datasets")
shiny::runApp('C:/ShinyApp')
shiny::runApp('C:/ShinyApp/Test')
shiny::runApp('C:/ShinyApp_New')
runApp('C:/ShinyApp_New')
runApp('C:/ShinyApp_New')
summary(data$V4)
data <- read.csv("C:/ShinyApp/Test/Data/dat.csv", header = T)
summary(data)
summary(data$V7)
summary(data$V6)
error <- data$V7
head(error)
runApp('C:/ShinyApp_New')
runApp('C:/ShinyApp_New')
runApp('C:/ShinyApp_New')
shiny::runApp('C:/Users/Eve/Dropbox/ShinyApp_New')
runApp('C:/Users/Eve/Dropbox/ShinyApp_New')
runApp('C:/Users/Eve/Dropbox/ShinyApp_New')
runApp('C:/Users/Eve/Dropbox/ShinyApp_New')
install.packages("MASS")
library(MASS)
install.packages("ISLR")
library(ISLR)
Boston
head(Boston)
colnames(Boston)
summary(Boston)
head(Smarket)
library(h2o)
h2o.init(nthreads=-1)
dx <- h2o.importFile("test.csv")
rm(list=ls())
gc(reset=TRUE)
setwd("C:/Users/Eve/Dropbox/UCLA Files/Courses/497 Individual Study")
library(readr)
library(glmnet)
library(ROCR)
setwd("C:/Users/Eve/Dropbox/UCLA Files/Courses/497 Individual Study")
install.packages("randomForest")
dx <- h2o.importFile("bank.csv")
setwd("C:/Users/Eve/Dropbox/UCLA Files/Courses/497 Individual Study")
library(h2o)
h2o.init(nthreads=-1)
dx <- h2o.importFile("bank.csv")
dir()
dx <- h2o.importFile("bank.csv")
setwd("C:/Users/Eve/Dropbox/UCLA Files/Courses/497 Individual Study")
library(h2o)
h2o.init(nthreads=-1)
dx <- h2o.importFile("bank.csv")
